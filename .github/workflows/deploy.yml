name: deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      PROJECT_NUMBER: ${{ secrets.PROJECT_NUMBER }}
      SERVICE_ACCOUNT_EMAIL: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
      WORKLOAD_IDENTITY_POOL_ID: ${{ secrets.WORKLOAD_IDENTITY_POOL_ID }}
      WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      REGION: ${{ secrets.REGION }}
      ARTIFACT_REGISTRY_REPOSITORY: ${{ secrets.ARTIFACT_REGISTRY_REPOSITORY }}
      IMAGE_NAME: web
      SERVICE_NAME: web

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 10.11.0
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - run: pnpm install --no-frozen-lockfile
      - run: pnpm --filter web build

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.WORKLOAD_IDENTITY_POOL_ID }}/providers/${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - uses: google-github-actions/setup-gcloud@v1

      - run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - run: |
          IMAGE="${{ env.ARTIFACT_REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          echo "IMAGE=$IMAGE" >> "$GITHUB_ENV"
          docker build -t "$IMAGE" -f packages/web/Dockerfile .
          docker push "$IMAGE"

      - run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --project ${{ env.PROJECT_ID }} \
            --image $IMAGE \
            --region ${{ env.REGION }} \
            --platform managed \
            --quiet \
            --allow-unauthenticated
